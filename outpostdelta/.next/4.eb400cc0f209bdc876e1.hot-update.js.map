{"version":3,"file":"4.eb400cc0f209bdc876e1.hot-update.js","sources":["webpack:///components/projects/1CCompany/RussianGamingGraph.js","webpack:///./node_modules/d3-scale/index.js","webpack:///./node_modules/d3/index.js"],"sourcesContent":["/* eslint-disable */\n/* to do lint this file */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as d3 from 'd3';\n\nconst data = '/static/northern.csv';\n\nexport default class RussianGamingGraph extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.props = props;\n\n    this.visualize = this.visualize.bind(this);\n    console.log('HousingGraph constructor this.props: ', this.props);\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    console.log('HousingGraph componentDidMount');\n    this.visualize();\n  }\n\n  componentDidUpdate() {\n    console.log('HousingGraph componentDidUpdate');\n  }\n\n  visualize() {\n    console.log('drawActivity');\n\n    const tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('id', 'tooltip')\n      .style('width', '150px')\n      .style('height', '40px')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('visibility', 'hidden')\n      .style('padding', '10px')\n      .style('background-color', 'white')\n      .style('opacity', '0.9');\n\n    const tooltipG = tooltip.append('svg').append('g');\n\n    tooltipG\n      .append('text')\n      .attr('x', 0)\n      .attr('y', 20)\n      .attr('class', 'tooltipFirstText')\n      .text('a simple tooltip');\n\n    tooltipG\n      .append('text')\n      .attr('x', 0)\n      .attr('y', 40)\n      .style('fill', '#999')\n      .attr('class', 'tooltipSecondText')\n      .style('font-size', '12px')\n      .text('a simple tooltip 2');\n    /*\n    tooltipG\n      .append('rect')\n      .attr('width', 100)\n      .attr('height', 5)\n      .attr('y', 60)\n      .attr('class', 'tooltipBar')\n      .style('fill', 'red');\n      */\n\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const viewport = d3\n      .select('#viewport')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .style('margin', '0 auto');\n\n    const svg = viewport;\n\n    d3\n      .select('svg')\n      .selectAll('.node')\n      .remove();\n\n    const format = d3.format(',d');\n\n    const color = '#FF0'; //d3.scaleOrdinal(d3.schemeCategory20c);\n\n    const pack = d3\n      .pack()\n      .size([width, width])\n      .padding(1.5);\n\n    d3.csv(\n      data,\n      d => {\n        d.value = +d.value;\n        if (d.value) return d;\n      },\n      (error, classes) => {\n        if (error) throw error;\n        const buildings = [\n          { title: 'Карты', total: 86, count: '3,925' },\n          { title: 'РостовНаДону', total: 128, count: '7,735' },\n          { title: 'Новосибирск ТЦ', total: 9, count: '834' },\n\n          { title: 'Цифровой склад 1С-Онлайн', total: 142, count: '9,234' },\n          { title: 'Выездная Торговля', total: 16, count: '1,016' },\n          { title: 'Якутск Орджоникидзе', total: 107, count: '5,331' }\n        ];\n        let count = 0;\n        let root = d3\n          .hierarchy({ children: classes })\n          .sum(d => {\n            return d.value;\n          })\n          .each(d => {\n            if ((id = d.data.id)) {\n              var id,\n                i = id.lastIndexOf('.');\n              d.id = id;\n              d.package = id.slice(0, i);\n              d.class = id.slice(i + 1);\n              d.title = buildings[count].title;\n              d.count = buildings[count].count;\n              d.total = buildings[count].total;\n              count++;\n            }\n          });\n\n        console.log('RussianGamingGraph root', root);\n\n        let node = svg\n          .selectAll('.node')\n          .data(pack(root).leaves())\n          .enter()\n          .append('g')\n          .attr('class', 'node')\n          .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n          });\n\n        const aqua = 'rgba(51, 197, 197, 0.20)';\n\n        let getColor = i => {\n          if (i < 5) return aqua;\n          else return aqua;\n        };\n\n        const updateTooltip = (title, subTitle) => {\n          const titleLen = title.length;\n          const subTitleLen = subTitle.length;\n          const useLen = titleLen > subTitleLen ? titleLen : subTitleLen;\n\n          tooltip\n            .style('top', event.pageY - 10 + 'px')\n            .style('left', event.pageX + 10 + 'px')\n            .style('width', useLen * 6 + 'px');\n          //tooltip.text(title);\n          d3\n            .select('#tooltip')\n            .select('.tooltipFirstText')\n            .text(title);\n          d3\n            .select('#tooltip')\n            .select('.tooltipSecondText')\n            .text(subTitle);\n          /*\n          d3\n            .select('#tooltip')\n            .select('.tooltipBar')\n            .attr('width', title.length * 10 + 'px')\n            .style('fill', 'blue')\n            .transition()\n            .duration(1000)\n            .ease(d3.easeLinear)\n            .style('fill', 'red')\n            .transition()\n            .duration(1000)\n            .ease(d3.easeLinear)\n            .style('fill', 'blue')\n            .on('start', function repeat() {\n              d3\n                .active(this)\n                .style('fill', 'red')\n                .transition()\n                .style('fill', 'green')\n                .transition()\n                .style('fill', 'blue')\n                .transition()\n                .on('start', repeat);\n            });\n            */\n          return tooltip;\n        };\n\n        node\n          .append('rect')\n          .attr('id', function(d) {\n            return d.id;\n          })\n          .attr('width', function(d) {\n            return d.r;\n          })\n          .attr('height', function(d) {\n            return d.r;\n          })\n          .style('fill', function(d, i) {\n            return getColor(i);\n          })\n          .style('cursor', 'pointer')\n          .on('mouseover', function() {\n            return tooltip.style('visibility', 'visible');\n          })\n          .on('mousemove', function(d) {\n            const subTitle = `${d.total} Shops which sold ${d.count} Items`;\n            const title = d.title;\n            return updateTooltip(title, subTitle);\n          })\n          .on('mouseout', function() {\n            return tooltip.style('visibility', 'hidden');\n          })\n          .on('click', function(d) {\n            console.log(d);\n          });\n\n        node\n          .append('clipPath')\n          .attr('id', function(d) {\n            return 'clip-' + d.id;\n          })\n          .append('use')\n          .attr('xlink:href', function(d) {\n            return '#' + d.id;\n          });\n\n        /*\n  \t  node.append(\"text\")\n  \t      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\n  \t      .attr(\"text-anchor\", \"middle\")\n  \t    .selectAll(\"tspan\")\n  \t    .data(function(d) { return d.class.split(/(?=[A-Z][^A-Z])/g); })\n  \t    .enter().append(\"tspan\")\n  \t      .attr(\"x\", 0)\n  \t      .attr(\"y\", function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })\n  \t      .text(function(d) { return d; });\n\n\n  \t  node.append(\"title\")\n  \t      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n  \t         */\n      }\n    );\n  }\n\n  render() {\n    return <div id=\"viewport\" />;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/projects/1CCompany/RussianGamingGraph.js","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./src/band\";\n\nexport {\n  default as scaleIdentity\n} from \"./src/identity\";\n\nexport {\n  default as scaleLinear\n} from \"./src/linear\";\n\nexport {\n  default as scaleLog\n} from \"./src/log\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./src/ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./src/pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./src/quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./src/quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./src/threshold\";\n\nexport {\n  default as scaleTime\n} from \"./src/time\";\n\nexport {\n  default as scaleUtc\n} from \"./src/utcTime\";\n\nexport {\n  default as scaleSequential\n} from \"./src/sequential\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-scale/index.js\n// module id = ./node_modules/d3-scale/index.js\n// module chunks = 4","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/index.js\n// module id = ./node_modules/d3/index.js\n// module chunks = 4"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AALA;AAMA;AACA;;;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AAaA;AAEA;AAOA;AAQA;;;;;;;;;;AAUA;AACA;AACA;AAOA;AAEA;AAKA;AAEA;AACA;AACA;AAKA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAIA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAGA;AACA;AAEA;;;;;;;;;;;;;AAeA;AAEA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;AA5PA;AACA;AADA;;;;;;;;;;;;AAFA;AAEA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}